bic$BestModel
png("bic.png")
pairs(bic$BestModel$model)
dev.off()
getwd
getwd()
aic<-bestglm(Xy = dd,
family = gaussian,
IC = "AIC",
method = "forward")
names(aic$BestModel$model)
summary(aic)
aic
library(pls)
pca<-pcr(y ~ ., ncomp = 10,scale = TRUE,
data = dd, validation = "CV")
summary(pca)
x=set.b[-1]
pc.cr<-princomp(x)
loadings(pc.cr)
load.m<-loadings(pc.cr)
load.m<-loadings(pc.cr)
str(load.m)
unclass(load.m)
load.m<-unclass(load.m)
unclass(load.m)
str(load.m)
pc.cr$loadings[,1:10]
load.m[,1:10]
pca<-pcr(y ~ ., ncomp = 10,scale = TRUE,
data = dd, validation = "CV")
summary(pca)
X<-x%*%load.m[,1:10]
pc.cr$scores
dd.pca<- cbind(dd$y,z)
z<-pc.cr$scores[,1:10]
dd.pca<- cbind(dd$y,z)
dim(z)
length(dd$y)
x=select(dd,-y)
pc.cr<-princomp(x)
load.m<-loadings(pc.cr)
load.m[,1:10]
z<-pc.cr$scores[,1:10]
dd.pca<- cbind(dd$y,z)
lm(y~.,dd.pca)
dd.pca<- as.data.frame(dd.pca)
names(dd.pca)
names(dd.pca)[1]<-"y"
lm(y~.,dd.pca)
pca
summary(pca)
library(pls)
pca<-pcr(y ~ ., ncomp = 10,scale = TRUE,
data = dd, validation = "CV")
summary(pca)
pca$coefficients
pca$loadings
pca$model
lm(y~pca$scores,data = dd)
lm(y~.,dd.pca)
load.m[,1:10]
pca$loadings
pca$loadings[,1:10]
load.m[,1:10]
pca$loadings[,1:10]
pca$loadings[,1:10][,1]
load.m[,1:10][,1]
sum((load.m[,1:10][,1])^2)
sum((pca$loadings[,1:10][,1])^2))
sum((pca$loadings[,1:10][,1])^2)
lm(y~pca$scores,data = dd)
pca.lm<-lm(y~pca$scores,data = dd)
summary(pca.lm)
lmpca<-lm(y~.,dd.pca)
summary(lmpca)
pca.lm<-lm(y~pca$scores,dd)
summary(pca.lm)
pls<-plsr(y ~ .,ncomp = 10,scale = TRUE,
data = dd, validation = "CV",method="simpls")
summary(pls)
pls.lm<-lm(y~pls$scores,dd)
summary(pls.lm)
source("GMC.R")
GMC
?drop
?plsr
library(pls)
?plsr
setwd("~/601final")
library(xlsx)
set.b<-read.csv(file = "data/Set_b.csv",header = T)
set.c<-read.csv(file = "data/Set_c.csv",header = T)
yy<- read.xlsx("data/TP53.xlsx",sheetIndex = 1)##TP53
#View(set.b);View(set.c)
#names(set.b)[names(set.b) %in% names(set.c)]
suppressMessages(library(MASS))
suppressMessages(library(bestglm))
suppressMessages(library(dplyr))
dd<-mutate(y=log(response),.data = set.b)#new y
dd<- select(dd,-response)
dd<-filter(dd,!(is.infinite(dd$y)))#new data
suppressMessages(library(pls))
pca<-pcr(y ~ ., ncomp = 10,scale = TRUE,
data = dd, validation = "CV")
pca<-pcr(y ~ ., ncomp = 10,scale = TRUE,
data = dd, validation = "CV",scale=TRUE)
pls<-plsr(y ~ .,ncomp = 10,scale = TRUE,
data = dd, validation = "CV",method="oscorepls"
,scale=TRUE)
pls<-plsr(y ~ .,ncomp = 10,scale = TRUE,
data = dd, validation = "CV",method="oscorespls"
,scale=TRUE)
library(scales)
pls<-plsr(y ~ .,ncomp = 10,scale = TRUE,
data = dd, validation = "CV"
,method="oscorespls"
,scale=TRUE)
scale(dd)
var(scale(dd))
a<-data.frame(1:5,3:7)
scale(a)
var(scale(a))
a<-data.frame(1:5,c(2,3,6,4,1))
var(scale(a))
a<-data.frame(V1=1:5,V2c(2,3,6,4,1))
a<-data.frame(V1=1:5,V2=c(2,3,6,4,1))
var(a)
var(scale(a))
dim(set.b)
hist(set.b$response)
hist(dd$y)
setwd("~/601final")
library(xlsx)
set.b<-read.csv(file = "data/Set_b.csv",header = T)
set.c<-read.csv(file = "data/Set_c.csv",header = T)
yy<- read.xlsx("data/TP53.xlsx",sheetIndex = 1)##TP53
#View(set.b);View(set.c)
#names(set.b)[names(set.b) %in% names(set.c)]
suppressMessages(library(MASS))
```
##1.transformation
```{r}
suppressMessages(library(bestglm))
suppressMessages(library(dplyr))
dd<-mutate(y=log(response),.data = set.b)#new y
dd<- select(dd,-response)
dd<-filter(dd,!(is.infinite(dd$y)))#new data
```
# 2. linear model selection(AIC,BIC,CP,CV)
```{r}
aic<-bestglm(Xy = dd,
family = gaussian,
IC = "AIC",
method = "forward")
names(aic$BestModel$model)
summary(aic)
bic<-bestglm(Xy = dd,
family = gaussian,
IC = "BIC",
method = "forward")
bic$BestModel
pairs(bic$BestModel$model)
library(DAAG)
?cv.lm
aic
aic$BestModel
aic$BestModel$model
names(aic$BestModel$model)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit = "")
?cv.lm
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,printit =F)
options(warn = -1)
library(DAAG)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,printit =F)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,printit =F)
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,printit =F)
aic.cv$cvpred
28.2/5.65
aic.cv
?cv.lm
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit = "Residual")
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,printit =F)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit = "Residual")
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit = "Observe")
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit = "Observed")
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F )
aic.cv$cvpred
aic.cv$Predicted
aic.cv$cvpred
aic.cv$Predicted
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F )
113*5
aic.cv$cvpred
aic.cv$cvpred
aic.cv$y
dim(dd)
pe <- mead((aic.cv$cvpred-aic.cv$y)^2)
pe <- mean((aic.cv$cvpred-aic.cv$y)^2)
pe
aic.cv
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F )
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,plotit =F )
(bic.pe <- mean((bic.cv$cvpred-bic.cv$y)^2))
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
(bic.pe <- mean((bic.cv$cvpred-bic.cv$y)^2))
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,seed=100,plotit =F ,printit = F)
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,seed=100,plotit =F, printit = F )
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,seed=100,plotit =F, printit = F )
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,plotit =F, printit = F )
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F ,printit = F)
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,plotit =F, printit = F )
(bic.pe <- mean((bic.cv$cvpred-bic.cv$y)^2))#BIC IS
setwd("~/601final")
library(xlsx)
set.b<-read.csv(file = "data/Set_b.csv",header = T)
set.c<-read.csv(file = "data/Set_c.csv",header = T)
yy<- read.xlsx("data/TP53.xlsx",sheetIndex = 1)##TP53
#View(set.b);View(set.c)
#names(set.b)[names(set.b) %in% names(set.c)]
suppressMessages(library(MASS))
```
##1.transformation
```{r}
suppressMessages(library(bestglm))
suppressMessages(library(dplyr))
dd<-mutate(y=log(response),.data = set.b)#new y
dd<- select(dd,-response)
dd<-filter(dd,!(is.infinite(dd$y)))#new data
```
aic<-bestglm(Xy = dd,
family = gaussian,
IC = "AIC",
method = "forward")
names(aic$BestModel$model)
summary(aic)
bic<-bestglm(Xy = dd,
family = gaussian,
IC = "BIC",
method = "forward")
bic$BestModel
pairs(bic$BestModel$model)
```
### CV1
```{r}
options(warn = -1)
library(DAAG)
aic.cv<-cv.lm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F ,printit = F)
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
bic.cv<-cv.lm(data = bic$BestModel$model, y ~ .,m = 5,plotit =F, printit = F )
(bic.pe <- mean((bic.cv$cvpred-bic.cv$y)^2))#BIC IS
names(aic$BestModel$model)
aic.cv<-CVlm(data = aic$BestModel$model, y ~ .,m = 5,plotit =F ,printit = F)
aic.cv<-CVlm(data = aic$BestModel$model, y ~ .,m = 5)
(aic.pe <- mean((aic.cv$cvpred-aic.cv$y)^2))
bic.cv<-CVlm(data = bic$BestModel$model, y ~ .,m = 5)
(bic.pe <- mean((bic.cv$cvpred-bic.cv$y)^2))#BIC IS better
?CVlm
bic
bic$BestModel$coefficients
bic$BestModel$assign
bic$BestModel$xlevels
bic$BestModel$terms
bic$BestModel$model
bic$BestModel$coefficients
gx<- bic$BestModel$coefficients[1]+bic$BestModel$model[-1] %*% bic$BestModel$coefficients[-1]
bic$BestModel$model[-1]
bic$BestModel$model[-1] %*% bic$BestModel$coefficients[-1]
bic$BestModel$model[-1] %*% t(bic$BestModel$coefficients[-1])
gx<- bic$BestModel$coefficients[1]+ as.matrix(bic$BestModel$model[-1]) %*% bic$BestModel$coefficients[-1]
gx
bic$BestModel$fitted.values
gx<- bic$BestModel$fitted.values
g<-function(x){
gg<- data.frame(`log`=log(x),`sin`=sin(x))
return(gg)
}
g(gx)
?glm
head(dd)
hist(dd$y)
e^6
exp(6)
exp(6.5)
exp(2)
exp(1)
dd.log<-mutate(dd,y.bin=ifelse(y<6.5,0,1))
dd.log<-select(dd.log,-y)
logit<-glm(y.bin~.,dd.log,family = binomial)
summary(logit)
dd.log<-mutate(dd,y=ifelse(y<6.5,0,1))
head(dd.log)
head(dd)
bic.log<-bestglm(Xy = dd.log,
family = binomial,
IC = "BIC",
method = "forward")
?bestglm
bic.log<-bestglm(Xy = dd.log,
family = binomial,
IC = "BIC")
bestglm(SAheart, IC="BICq", t=0.25, family=binomial)
bic.log<-bestglm(Xy = dd.log[-c(1:195)],
family = binomial,
IC = "BIC")
bic.log
aic$BestModel$model
hist(dd.log$y)#take 6.5 as thrshold
dd.log<-aic$BestModel$model
hist(dd.log$y)#take 6.5 as thrshold
threshold<-6.5
dd.log<-mutate(dd.log,y=ifelse(y<6.5,0,1))
logit<-glm(y~.,dd.log,family = binomial)
bic.log<-bestglm(Xy = dd.log,
family = binomial,
IC = "BIC") # data's too big
head(dd.log)
dd.log<-aic$BestModel$model
head(dd.log)
dd.log<-mutate(dd.log,y=ifelse(y<6.5,0,1))
head(dd.log)
dd.log<- cbind(select(dd.log,-y),select(dd.log,y))
dd.log<-aic$BestModel$model
dd.log<- cbind(select(dd.log,-y),select(dd.log,y))
hist(dd.log$y)#take 6.5 as thrshold
threshold<-6.5
dd.log<-mutate(dd.log,y=ifelse(y<6.5,0,1))
#logit<-glm(y~.,dd.log,family = binomial)
bic.log<-bestglm(Xy = dd.log,
family = binomial,
IC = "BIC") # data's too big
head(dd.log)
dd.log<-bic$BestModel$model
dd.log<- cbind(select(dd.log,-y),select(dd.log,y))
hist(dd.log$y)#take 6.5 as thrshold
threshold<-6.5
dd.log<-mutate(dd.log,y=ifelse(y<6.5,0,1))
#logit<-glm(y~.,dd.log,family = binomial)
bic.log<-bestglm(Xy = dd.log,
family = binomial,
IC = "BIC") # data's too big
bic$BestModel
source("GMC.R")
GMC
system.file("GMC.R")
GMC(gx,g(gx)[1])
gx<- bic$BestModel$fitted.values
g<-function(x){
gg<- data.frame(`log`=log(x),`sin`=sin(x))
return(gg)
}
g(gx)
g(gx)[1]
data<-cbind(gx,g(gx)[1])
GMC(data)
data<-cbind(g(gx)[1],bic$BestModel$model$y)
GMC(data)
xb<- bic$BestModel$fitted.values
source("GMC.R")
data<-cbind(g(xb)[1],bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
bic
xb<- bic$BestModel$fitted.values
g<-function(x){
return(x)
}
source("GMC.R")
source("GMC.R")
data<-cbind(g(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
bic$BestModel$coefficients
rep(0,3)
data
x=data[,1];y=data[,2]
n=length(x);ln=nlocal
nlocal=25
n=length(x);ln=nlocal
n
head(data)
xdata=data[order(x),];ydata=data[order(y),]
head(xdata)
E_xy=rep(0,n);E_yx=rep(0,n)
E_xy
X=t(matrix(rep(xdata[,1],n),ncol=n)); X=1/(1+abs(X-t(X)))
X
dim(X)
rep(1:#,3)
rep(1:3,3)
X=t(matrix(rep(xdata[,1],n),ncol=n))
X[,1]
?optim
GMC(data)#(GMC(X|Y),GMC(Y|X))
?optim
bic$BestModel$model
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
optim(par = initials, fn =fn, method = "Nelder-Mead" )
initials<-bic$BestModel$coefficients#initial beta
optim(par = initials, fn =fn, method = "Nelder-Mead" )
g1<-function(x){
return(x)
}
xb<- bic$BestModel$fitted.values
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
optim(par = initials, fn =fn, method = "Nelder-Mead" )
initials
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[1])#(GMC(X|Y),GMC(Y|X))
}
optim(par = initials, fn =fn, method = "Nelder-Mead" )
initials
GMC(data)#(GMC(X|Y),GMC(Y|X))
opt<-optim(par = initials, fn =fn, method = "Nelder-Mead" )
opt$par
opt$value
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
opt<-optim(par = initials, fn =fn, method = "Nelder-Mead" )
opt$par
opt$value
m1 <- glm(y ~ ., family="poisson", data=bic$BestModel$model)
summary(mq)
summary(m1)
poisson<- glm(y ~ ., family="poisson", data=bic$BestModel$model)
poisson<- glm(y ~ ., family="poisson", data=bic$BestModel$model)
initials<- poisson$coefficients
xb<- poisson$fitted.values
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
xb<- bic$BestModel$fitted.values
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
g2<-function(x){
return(exp(x))
}
poisson<- glm(y ~ ., family="poisson", data=bic$BestModel$model)
initials<- poisson$coefficients
xb<- poisson$fitted.values
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
poisson$model
poisson
summary(poisson)
poisson$fitted.values
poisson$model[-1] %*% poisson$coefficient[-1]
as.matrix(poisson$model[-1]) %*% poisson$coefficient[-1]
as.matrix(poisson$model[-1]) %*% poisson$coefficients[-1] + poisson$coefficients[1]
fittt<-as.matrix(poisson$model[-1]) %*% poisson$coefficients[-1] + poisson$coefficients[1]
exp(fittt)
poisson$fitted.values
exp(fittt)
fittt<-as.matrix(poisson$model[-1]) %*% poisson$coefficients[-1] + poisson$coefficients[1]
exp(fittt)
fn<-function(beta){
xb= exp(as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1])
data<-cbind(g1(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
opt<-optim(par = initials, fn =fn, method = "Nelder-Mead" )
opt$par
opt$value
GMC(data)#(GMC(X|Y),GMC(Y|X))
poisson$fitted.values
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
xb<- poisson$fitted.values
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
initials<- poisson$coefficients
g2<-function(x){
return(exp(x))
}
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
opt<-optim(par = initials, fn =fn, method = "Nelder-Mead" )
opt$par
opt$value
beta<-initials
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
GMC(data)
data<-cbind(poisson$fitted.values,bic$BestModel$model$y)#X,Y
GMC(data)#(GMC(X|Y),GMC(Y|X))
fn<-function(beta){
xb= as.matrix(bic$BestModel$model[-1]) %*% beta[-1]+beta[1]
data<-cbind(g2(xb),bic$BestModel$model$y)#X,Y
return(-GMC(data)[2])#(GMC(X|Y),GMC(Y|X))
}
opt<-optim(par = initials, fn =fn, method = "Nelder-Mead" )
opt$par
opt$value
